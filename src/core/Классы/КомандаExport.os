///////////////////////////////////////////////////////////////////
//
// Служебный модуль с реализацией работы команды export
//
// Представляет собой модификацию приложения gitsync от 
// команды oscript-library
//
// Структура модуля реализована в соответствии с рекомендациями 
// oscript-app-template (C) EvilBeaver
//
///////////////////////////////////////////////////////////////////

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт

	ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды, "Выполнить локальную синхронизацию, без pull/push");
	
	Парсер.ДобавитьПозиционныйПараметрКоманды(ОписаниеКоманды, "ПутьКХранилищу", "Файловый путь к каталогу хранилища конфигурации 1С.");
	Парсер.ДобавитьПозиционныйПараметрКоманды(ОписаниеКоманды, "ЛокальныйКаталогГит", "Каталог исходников внутри локальной копии git-репозитария.");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-email", "<домен почты для пользователей git>");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-v8version", "<Маска версии платформы (8.3, 8.3.5, 8.3.6.2299 и т.п.)>");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-debug", "<on|off>");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-verbose", "<on|off>");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-format", "<hierarchical|plain>");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-minversion", "<номер минимальной версии для выгрузки>");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-maxversion", "<номер максимальной версии для выгрузки>");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-limit", "<выгрузить неболее limit версий от текущей выгруженной>");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-tempdir", "<Путь к каталогу временных файлов>");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-useTool1cd", "<on|off> Получение версии хранилища средствами tool1cd или типовыми средствами платформы>");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-userRep", "<пользователь хранилища конфигурации>");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-passRep", "<пароль пользователя хранилища конфигурации>");	
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-delTFiles", "<on|off> признак удаления временных файлов");	
	
	Парсер.ДобавитьКоманду(ОписаниеКоманды);

КонецПроцедуры // ЗарегистрироватьКоманду

Функция ВыполнитьКоманду(Знач ПараметрыКоманды, Знач ДополнительныеПараметры) Экспорт

	ЛокальныйКаталогГит = ПараметрыКоманды["ЛокальныйКаталогГит"];
	Формат = ПараметрыКоманды["-format"];
	МинВерсия = ПараметрыКоманды["-minversion"];
	МаксВерсия = ПараметрыКоманды["-maxversion"];
	Лимит = ПараметрыКоманды["-limit"];
	ИспользоватьTool1CD = ПараметрыКоманды["-useTool1cd"];
	УдалятьВременныеФайлы = ПараметрыКоманды["-delTFiles"];
	
	Если ИспользоватьTool1CD = Неопределено Тогда
	
		ИспользоватьTool1CD = "on"; // по умолчанию используем tool1cd
		
	КонецЕсли;
	
	ПараметрыДоступаКХранилищу = Неопределено;
	
	Если ИспользоватьTool1CD = "off" Тогда
	
		ПараметрыДоступаКХранилищу = Новый Структура("ПользовательХранилища, ПарольХранилища", ПараметрыКоманды["-userRep"], ПараметрыКоманды["-passRep"]);
		ПроверитьПараметрыДоступаКХранилищу(ПараметрыДоступаКХранилищу);
		
	КонецЕсли;

	Если ЛокальныйКаталогГит = Неопределено Тогда

		ЛокальныйКаталогГит = ТекущийКаталог();

	КонецЕсли;

	Если Формат = Неопределено Тогда

		Формат = РежимВыгрузкиФайлов.Авто;

	КонецЕсли;

	Если МинВерсия = Неопределено Тогда
	
		МинВерсия = 0;

	КонецЕсли;

	Если МаксВерсия = Неопределено Тогда
	
		МаксВерсия = 0;

	КонецЕсли;

	Если Лимит = Неопределено Тогда
	
		Лимит = 0;

	КонецЕсли;

	МаксВерсия = Число(МаксВерсия);
	МинВерсия = Число(МинВерсия);
	Лимит = Число(Лимит);
	
	Если УдалятьВременныеФайлы <> Неопределено Тогда
	
		ДополнительныеПараметры.Вставить("УдалятьВременныеФайлы", ?(УдалятьТемпы="on", Истина, Ложь));
		
	КонецЕсли;

	Распаковщик = РаспаковщикКонфигурации.ПолучитьИНастроитьРаспаковщик(ПараметрыКоманды, ДополнительныеПараметры);
	Распаковщик.ВерсияПлатформы				= ПараметрыКоманды["-v8version"];
	Распаковщик.ДоменПочтыДляGitПоУмолчанию	= ПараметрыКоманды["-email"];
	ДополнительныеПараметры.Лог.Информация("Начинаю выгрузку исходников");
	РаспаковщикКонфигурации.ВыполнитьЭкспортИсходников(Распаковщик, ПараметрыКоманды["ПутьКХранилищу"], ЛокальныйКаталогГит, МинВерсия, МаксВерсия, Формат,,, Лимит, ПараметрыДоступаКХранилищу);
	ДополнительныеПараметры.Лог.Информация("Выгрузка завершена");

	Возврат МенеджерКомандПриложения.РезультатыКоманд().Успех;

КонецФункции // ВыполнитьКоманду

Процедура ПроверитьПараметрыДоступаКХранилищу(ПараметрыДоступаКХранилищу)

	Если ПараметрыДоступаКХранилищу.ПользовательХранилища = Неопределено Тогда
		
		ВызватьИсключение "Не задан пользователь хранилища конфигурации.";
		
	КонецЕсли;
	
	Если ПараметрыДоступаКХранилищу.ПарольХранилища = Неопределено Тогда
	
		ПарольХранилища = "";
		
	КонецЕсли;
	
КонецПроцедуры
